@keyframes rotate {
    to {
        transform: rotate(360deg);
    }
}

html {
	background-color: var(--background-color);
	color: var(--text-color);
    font-family: Arial, Helvetica, sans-serif;
}

body {
    margin: 0;
}

canvas#view {
    background-color: var(--background-color);
    height: 100vh;
    width: 100vw;
}

bhr-game-container {
	display: block;
	width: fit-content;
	position: relative;
    margin: auto;
}

bhr-game-container bhr-game-interface {
	bottom: 0;
	display: block;
	left: 0;
	pointer-events: none;
	position: absolute;
	right: 0;
	top: 0;
	z-index: 1;
}

bhr-game-interface .bhr-game-overlay {
    align-items: center;
    backdrop-filter: blur(.75rem);
	bottom: 0;
    box-sizing: border-box;
	display: none;
    flex-direction: column;
    justify-content: center;
	left: 0;
	padding: 1rem;
    pointer-events: all;
    position: absolute;
	right: 0;
	top: 0;
}

.bhr-game-overlay nav {
    width: 40vw;
    display: grid;
	grid-template-columns: repeat(auto-fit, minmax(60px, 1fr));
    justify-content: center;
}

.bhr-game-overlay nav > label {
    -webkit-user-select: none;
    background-color: rgba(128, 128, 128, .08);
    border: none;
    border-radius: 5px;
	box-sizing: border-box;
	font-family: fantasy;
	font-size: clamp(8px, 2cqw, 1rem);
    opacity: .8;
    padding: .25rem .5rem;
    text-align: center;
	transition: background-color 80ms;
    user-select: none;
}

.bhr-game-overlay nav > label:hover {
    background-color: rgba(128, 128, 128, .2);
	/* cursor: pointer; */
}

.bhr-game-overlay:has(input[type="radio"]#track:checked) nav > label[for="track"],
.bhr-game-overlay:has(input[type="radio"]#ghost:checked) nav > label[for="ghost"],
.bhr-game-overlay:has(input[type="radio"]#settings:checked) nav > label[for="settings"],
.bhr-game-overlay:has(input[type="radio"]#appearance:checked) nav > label[for="appearance"] {
    background-color: rgba(128, 128, 128, .4);
    opacity: 1;
}

.bhr-game-overlay > section {
    align-items: center;
    display: none;
    flex-direction: column;
	padding: 0.5rem;
	max-width: 80vmin;
    min-height: 50vmin;
}

/* section:has(> input:is([type="checkbox"], [type="radio"]):not(:checked)) {
    display: none !important;
} */

:has(> :checked) {
    display: flex !important; /* revert !important */
}

.bhr-game-overlay > section > label:has(> input) {
	-webkit-user-select: none;
	background-color: rgba(255, 255, 255, .08);
	border-radius: 1rem;
	display: flex;
	padding: 0.25rem 1rem;
	user-select: none;
}

bhr-game-interface .bhr-game-overlay button {
    background-color: rgba(128, 128, 128, .4);
    border: none;
    border-radius: 5px;
	color: var(--text-color);
    margin: 1px 2px;
    padding: 8px 14px;
    transition: background-color 40ms;
    width: 100%;
}

bhr-game-interface .bhr-game-overlay button:hover {
	filter: brightness(calc(1 + .2 * var(--brightness-multiplier)));
}

bhr-game-interface textarea {
    background-color: rgba(0, 0, 0, .4);
    border: none;
    border-radius: 5px;
    color: white;
    margin-top: 5px;
	max-width: -webkit-fill-available;
    outline: none;
    padding: 5px;
	resize: none;
}

bhr-game-interface bhr-game-toolbar {
    -webkit-user-select: none;
	bottom: 0;
    display: block;
	left: 0;
    position: absolute;
	right: 0;
    top: 0;
    user-select: none;
}

bhr-game-toolbar .editor-tools,
bhr-game-toolbar .tool-settings,
bhr-game-toolbar .tool-settings div[data-id=eraser] {
    display: none;
    margin-top: 25px;
}

bhr-game-toolbar .left, bhr-game-toolbar .right {
    position: absolute;
}

bhr-game-toolbar .left {
    left: 0;
}

bhr-game-toolbar .right {
    right: 0;
}

bhr-game-toolbar .toolbar-item {
    align-items: center;
    aspect-ratio: 1;
	backdrop-filter: blur(2px);
	background-color: transparent;
	border: none;
	border-color: var(--border-color);
	box-sizing: content-box;
	color: var(--text-color);
    display: flex;
	font-size: 1rem;
    height: 1rem;
    justify-content: center;
	margin: 0;
    outline: none;
    padding: 8px;
	pointer-events: all;
	width: 1rem;
}

bhr-game-toolbar .toolbar-item:not(.eraser, .grid, .powerup, .scenery, .wheel, [for])::before {
	background-color: var(--text-color);
}

bhr-game-toolbar .editor-tools .toolbar-item::before {
	background-color: transparent;
}

bhr-game-toolbar .toolbar-item:hover,
bhr-game-toolbar .toolbar-item:has(> input:checked):not(.playpause):hover {
    transition: all 40ms;
    background-color: hsla(0, 0%, calc(50% - 40% * var(--brightness-multiplier)), 0.8);
}

bhr-game-toolbar .toolbar-item:has(> input:checked):not(.playpause) {
	background-color: hsla(0, 0%, calc(50% - 40% * var(--brightness-multiplier)), 0.7);
}

/* Alternate hover/active style
bhr-game-toolbar .toolbar-item:has(> input:checked):not(.playpause)::after, bhr-game-toolbar .toolbar-item:hover::after {
	background-color: hsla(0, 0%, calc(50% - 40% * var(--brightness-multiplier)), 0.7);
	border-radius: 4px;
	bottom: 0;
	content: "";
	left: 0;
	margin: 2px;
	position: absolute;
	right: 0;
	top: 0;
	z-index: -1;
} */

bhr-game-toolbar .toolbar-item::before {
    transition: all 200ms;
}

bhr-game-toolbar .toolbar-item > * {
    display: block;
    width: inherit;
    height: inherit;
    pointer-events: none;
    transition: all 200ms;
}

.toolbar-item.disabled {
    opacity: .4;
}

.toolbar-item.disabled:hover {
    cursor: not-allowed;
    pointer-events: none;
}

bhr-game-toolbar .left .toolbar-item {
    border-right-width: 1px;
    border-right-style: solid;
}

bhr-game-toolbar .left :has(+ br) {
	border-bottom-color: var(--border-color);
	border-bottom-right-radius: 5px;
    border-bottom-style: solid;
	border-bottom-width: 1px;
}

bhr-game-toolbar .left > br ~ * {
	border-top-color: var(--border-color);
	border-top-right-radius: 5px;
    border-top-style: solid;
	border-top-width: 1px;
}

bhr-game-toolbar .right .toolbar-item {
    border-left-style: solid;
    border-left-width: 1px;
}

bhr-game-toolbar section > :not(div):last-child {
	border-bottom-color: var(--border-color);
    border-bottom-style: solid;
    border-bottom-width: 1px;
}

.playpause::before {
	/* content: "â–¶"; */
    clip-path: polygon(
        0 0,
        50% 25%,
        50% 75%,
        50% 75%,
        50% 25%,
        100% 50%,
        100% 50%,
        0 100%
    );
}

.playpause:has(> :checked)::before {
    clip-path: polygon(
        0 0,
        40% 0,
        40% 100%,
        60% 100%,
        60% 0,
        100% 0,
        100% 100%,
        0 100%
    );
}

.backtrack::before {
    clip-path: polygon(
        0 0,
        20% 0,
        20% 50%,
        100% 0,
        100% 100%,
        20% 50%,
        20% 100%,
        0 100%
    );
}

.rewind::before {
    clip-path: polygon(
        0 0,
        20% 0,
        20% 50%,

        /* arrow left midway end */
        60% 0,
        60% 50%,

        /* arrow left midway arrow left*/
        100% 0,
        100% 100%,
        50% 50%,
        60% 50%,

        60% 100%,
        20% 50%,
        20% 100%,
        0 100%
    );
}

.wheel:active > svg {
    animation: rotate 1s ease;
}

.brush::before {
	background-color: var(--text-color);
    clip-path: circle(20%);
}

.scenery::before {
    background-color: #aaa;
}

.toolbar-item::before,
.powerup.triangle::after,
.grid::after {
    content: "";
    width: inherit;
    height: inherit;
    position: absolute;
}

.line::before {
    border-radius: 4px;
    clip-path: polygon(
        90% 0,
        0 90%,
        10% 100%,
        100% 10%
    );
}

.eraser::before {
    clip-path: circle(45%);
    background-color: #ffb6c1;
}

.camera::before {
    clip-path: polygon(
        50% 0,
        30% 25%,
        45% 25%,
        45% 45%,
        25% 45%,
        25% 30%,
        0 50%,
        25% 70%,
        25% 55%,
        45% 55%,
        45% 75%,
        30% 75%,
        50% 100%,
        70% 75%,
        55% 75%,
        55% 55%,
        75% 55%,
        75% 70%,
        100% 50%,
        75% 30%,
        75% 45%,
        55% 45%,
        55% 25%,
        70% 25%,
        50% 0
    );
}

.grid::before {
    background-color: hsl(0, 0%, 50%);
    border-radius: 20%;
    clip-path: polygon(
        55% 45%,
        55% 5%,
        45% 5%,
        45% 45%,
        55% 45%,
        95% 45%,
        95% 55%,
        55% 55%,
        55% 95%,
        45% 95%,
        45% 55%,
        5% 55%,
        5% 45%
    );
}

.grid::after {
    background-color: hsl(0, 0%, 50%);
    border-radius: 20%;
    clip-path: polygon(
        30% 80%,
        30% 5%,
        20% 5%,

        20% 20%,
        5% 20%,
        5% 30%,
        20% 30%,

        /* MIDDLE HORIZONTAL
        20% 45%,
        0 45%,
        0 55%,
        20% 55%,
        END MIDDLE HORIZONTAL */

        20% 70%,
        5% 70%,
        5% 80%,
        20% 80%,

        20% 95%,
        30% 95%,
        30% 80%,

        70% 80%,
        70% 95%,
        80% 95%,
        80% 80%,

        95% 80%,
        95% 70%,
        80% 70%,

        80% 30%,
        95% 30%,
        95% 20%,
        80% 20%,

        80% 5%,
        70% 5%,

        70% 70%,
        30% 70%,

        30% 20%,
        70% 20%,
        70% 30%,
        30% 30%,

        30% 70%

    );
}

.powerup:not(.triangle)::before {
	border: 4px solid var(--text-color);
	border-radius: 50%;
    box-sizing: border-box;
	clip-path: circle(30%);
}

.powerup.target::before {
    background-color: #ff0;
}

.powerup.checkpoint::before {
    background-color: #00f;
}

.powerup.triangle::before {
	background-color: var(--text-color);
    clip-path: polygon(
        15% 25%,
        85% 50%,
        15% 75%,
        15% 25%
    );
}

.powerup.triangle::after {
    clip-path: polygon(
        25% 35%,
        60% 50%,
        25% 65%,
        25% 35%
    );
}

.powerup.triangle.boost::after {
    background-color: #ff0;
}

.powerup.triangle.gravity::after {
    background-color: #0f0;
}

.powerup.bomb::before {
    background-color: #f00;
}

.powerup.slowmo::before {
    background-color: #eee;
}

.powerup.antigravity::before {
    background-color: #0ff;
}

.powerup.teleport::before {
    background-color: #f0f;
}

.fullscreen::before {
	/* content: "â›¶"; */
    clip-path: polygon(
        0 40%,
        0 0,
        40% 0,
        40% 20%,
        20% 20%,
        20% 40%,
        0 40%,
        0 100%,
        40% 100%,
        40% 80%,
        20% 80%,
        20% 60%,
        0 60%,
        0 100%,
        100% 100%,
        100% 60%,
        80% 60%,
        80% 80%,
        60% 80%,
        60% 100%,
        100% 100%,
        100% 0,
        60% 0,
        60% 20%,
        80% 20%,
        80% 40%,
        100% 40%,
        100% 100%,
        0 100%
    );
}

:fullscreen .fullscreen::before {
    clip-path: polygon(
        0 40%,
        40% 40%,
        40% 0,
        20% 0,
        20% 20%,
        0 20%,
        0 60%,
        40% 60%,
        40% 100%,
        20% 100%,
        20% 80%,
        0 80%,
        0 100%,
        60% 100%,
        60% 60%,
        100% 60%,
        100% 80%,
        80% 80%,
        80% 100%,
        60% 100%,
        100% 100%,
        100% 40%,
        60% 40%,
        60% 0,
        80% 0,
        80% 20%,
        100% 20%,
        100% 40%,
        100% 100%,
        0 100%
    );
}

.increment::before {
    clip-path: polygon(
        40% 0,
        40% 40%,
        0 40%,
        0 60%,
        40% 60%,
        40% 100%,
        60% 100%,
        60% 60%,
        100% 60%,
        100% 40%,
        60% 40%,
        60% 0
    );
}

.decrement::before {
    clip-path: polygon(
        0 40%,
        100% 40%,
        100% 60%,
        0 60%
    );
}

window-frame {
    background-color: var(--background-color);
    color: #80808080;
    display: grid;
    grid-template-columns: 1fr auto;
    position: relative;
    user-select: none;
    -webkit-user-select: none;
    -webkit-app-region: drag;
}

window-frame label {
    font-size: 10px;
    padding: 0 4px;
    position: relative;
    -webkit-app-region: no-drag;
}

window-frame label:hover {
    color: #808080ad;
}

window-frame div[data-position="left"] > * {
    max-height: 1.25rem;
    padding: 0.25rem;
    vertical-align: middle;
}

window-frame div[data-position="right"] {
    display: flex;
    -webkit-app-region: no-drag;
}

window-frame button {
    aspect-ratio: auto;
    background-color: transparent;
    border-radius: 0;
    height: -webkit-fill-available;
    padding: 0.25rem 1rem;
    position: relative;
    vertical-align: middle;
}

window-frame button:hover {
    background-color: #80808030;
    color: var(--text);
}

window-frame button:hover:active {
    background-color: #80808050;
}

window-frame button#maximize[title="Restore"]::before {
    content: "â–¢";
    position: absolute;
    top: 6px;
    left: 14px;
}

window-frame button#close:hover {
    background-color: #ff0000dd;
}

window-frame button#close:hover:active {
    background-color: #ff000090;
}